<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_9" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

    <display-name>jeeshop</display-name>

    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>jeeshop.root</param-value>
    </context-param>

	<!-- spring配置 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath*:spring/applicationContext.xml</param-value>
    </context-param>
    
    <!-- spring mvc配置 -->
    <servlet>
        <description>spring mvc servlet</description>
        <servlet-name>springMvc</servlet-name>
        <servlet-class>net.jeeshop.core.servlet.MultipartDispatcherServlet</servlet-class>
        <init-param>
            <description>spring mvc 配置文件</description>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath*:spring/spring-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springMvc</servlet-name>
        <!-- "/*"可以匹配所有url，包括带扩展名的，一般只用在过滤器上。
			而"/"很多人理解成不能拦截带扩展名的，这种理解是错误的！
			它其实也能拦截“.js”，“.css”，".png"等静态资源的访问。
			看官方文档可知，它是tomcat的默认servlet，
			当其他的url-pattern匹配不上时都会走这个servlet。
			它除了能够处理静态资源还能够处理HTTP缓存请求，
			媒体（音频/视频）数据流和文件下载简历。
			所以如果我们的项目中配置了"/"，
			会覆盖掉tomcat中的default servlet。
			这样以来，所有对于静态资源的请求都会被看作是一个普通的后台控制器请求，
			导致请求找不到而报 404 异常错误。
			
			所以，
			当springMVC的前端控制器配置为“/”时，需要在主配置文件中配置放行静态资源。 
			具体做法：
			 Spring MVC 在全局配置文件中提供了一个<mvc:default-servlet-handler/>标签。
			 在 WEB 容器启动的时候会在上下文中定义一个 DefaultServletHttpRequestHandler，
			 它会对DispatcherServlet的请求进行处理，
			 如果该请求已经作了映射，那么会接着交给后台对应的处理程序，
			 如果没有作映射，就交给 WEB 应用服务器默认的 Servlet 处理，
			 从而找到对应的静态资源，只有再找不到资源时才会报错。-->
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    
	<!-- 配置文件上传处理程序Servlet -->
    <servlet>
        <servlet-name>Uploadify</servlet-name>
        <servlet-class>net.jeeshop.core.servlet.Uploadify</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>Uploadify</servlet-name>
        <url-pattern>/uploadify</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>ValidateImage</servlet-name>
        <servlet-class>net.jeeshop.core.servlet.ValidateImage</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>ValidateImage</servlet-name>
        <url-pattern>/ValidateImage.do</url-pattern>
    </servlet-mapping>

    <filter>
        <filter-name>Set Character Encoding</filter-name>
        <filter-class>
            org.springframework.web.filter.CharacterEncodingFilter
        </filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>Set Character Encoding</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

	<!-- URL重写 -->
    <filter>
        <filter-name>UrlRewriteFilter</filter-name>
        <filter-class>
            org.tuckey.web.filters.urlrewrite.UrlRewriteFilter
        </filter-class>
        <init-param>
            <param-name>logLevel</param-name>
            <!--               <param-value>WARN</param-value> -->
            <param-value>INFO</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>UrlRewriteFilter</filter-name>
        <!-- 匹配所有路径型的和后缀型的url -->
        <url-pattern>/*</url-pattern>
    </filter-mapping>

	<!-- 错误处理 -->
    <error-page>
        <error-code>404</error-code>
        <location>/404.jsp</location>
    </error-page>
    <error-page>
        <error-code>500</error-code>
        <location>/error.jsp</location>
    </error-page>

	<!-- session配置 -->
    <session-config>
        <session-timeout>600</session-timeout>
    </session-config>

    <listener>
        <listener-class>net.jeeshop.core.listener.SystemListener</listener-class>
    </listener>
</web-app>
